CREATE DATABASE IF NOT EXISTS gym_membership;
USE gym_membership;

CREATE TABLE IF NOT EXISTS  `ROLE`(
	role_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    `role` VARCHAR(50) NOT NULL
); 

CREATE TABLE IF NOT EXISTS CITY(
	city_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(50) NOT NULL,
    zip_code VARCHAR(5) NOT NULL 
		CHECK((LENGTH(zip_code) = 5) AND (zip_code REGEXP '^[0-9]{5}$')),
        
	CONSTRAINT uq_city UNIQUE KEY(`name`, zip_code)
);
    
CREATE TABLE IF NOT EXISTS `MEMBER`(
	member_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    phone VARCHAR(9) NULL
		CHECK((phone REGEXP '^[0-9]{9}$') OR (phone IS NULL)),
    email VARCHAR(255) NULL
		CHECK((email REGEXP '@.*\\.') OR (email IS NULL))
);

CREATE TABLE IF NOT EXISTS `USER`(
	user_id BIGINT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    phone VARCHAR(9) NULL
		CHECK((phone REGEXP '^[0-9]{9}$') OR (phone IS NULL)),
	email VARCHAR(255) NOT NULL
		CHECK(email REGEXP '@.*\\.'),
	`password` VARCHAR(50) NOT NULL
		CHECK(LENGTH(`password`) >= 8),
    city_id BIGINT NULL,
    
    CONSTRAINT fk_user_city FOREIGN KEY(city_id) REFERENCES GYM_MEMBERSHIP.CITY(city_id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS GYM(
	gym_id BIGINT PRIMARY KEY AUTO_INCREMENT,
	`name` VARCHAR(50) NOT NULL,
	address VARCHAR(255) NOT NULL,
	phone VARCHAR(9) NULL
	CHECK((phone REGEXP '^[0-9]{9}$') OR (phone IS NULL)),
	email VARCHAR(255) NULL
	CHECK((email REGEXP '@.*\\.') OR (email IS NULL)),
	city_id BIGINT NOT NULL,
    
	CONSTRAINT fk_gym_city FOREIGN KEY(city_id) REFERENCES GYM_MEMBERSHIP.CITY(city_id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS MEMBERSHIP(
	gym_id BIGINT NOT NULL,
    member_id BIGINT NOT NULL,
    date_from DATE NOT NULL,
    date_to DATE NOT NULL,
    
    CONSTRAINT fk_membership_gym FOREIGN KEY(gym_id) REFERENCES GYM_MEMBERSHIP.GYM(gym_id) ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT fk_membership_member FOREIGN KEY(member_id) REFERENCES GYM_MEMBERSHIP.MEMBER(member_id) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS USER_ROLE(
	user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    
    CONSTRAINT fk_userrole_user FOREIGN KEY(user_id) REFERENCES GYM_MEMBERSHIP.USER(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
    CONSTRAINT fk_userrole_role FOREIGN KEY(role_id) REFERENCES GYM_MEMBERSHIP.ROLE(role_id) ON UPDATE CASCADE ON DELETE RESTRICT
);